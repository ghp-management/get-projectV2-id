name: Get ProjectV2 ID
description: This action outputs the ProjectV2 ID using the Project number and Organization login name

branding:
  icon: 'check-square'
  color: 'purple'

inputs:
  token:
    description: GitHub Token
    required: true
  organization:
    description: Organization login name
  user:
    description: User login name
  project_number:
    description: ProjectV2 Number
    required: true

outputs:
  project_id:
    description: The ProjectV2 ID in long format
    value: "${{ steps.execution.outputs.project_id }}"

runs:
  using: "composite"
  steps:
    - id: execution
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.token }}
        script: |
          const org = "${{ inputs.organization }}";
          const user = "${{ inputs.user }}";

          if (!org && !user) {
            core.setFailed("Organization or User login name is required")
          }

          const p_number = ${{ inputs.project_number }};

          let query;
          if (org) {
            query = `
              query {
                organization(login: "${org}") {
                  projectV2(number: ${p_number}) {
                    id
                  }
                }
              }
            `;
          } else {
            query = `
              query {
                user(login: "${user}") {
                  projectV2(number: ${p_number}) {
                    id
                  }
                }
              }
            `;
          }

          const res = await github.graphql(query);
          const project_id = res.organization.projectV2?.id;

          if (!project_id) {
            core.setFailed("Project not found for organization: " + org + ", project number: " + p_number);
          }

          console.log("Project ID Found:", project_id);
          core.setOutput("project_id", project_id);
